// <auto-generated />
using CarWebShop.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarWebShop.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231003133158_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarWebShop.Models.Advertisement", b =>
                {
                    b.Property<int>("AdverID")
                        .HasColumnType("int");

                    b.Property<int>("CarID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("AdverID");

                    b.HasIndex("UserID");

                    b.ToTable("Advertisement");
                });

            modelBuilder.Entity("CarWebShop.Models.Car", b =>
                {
                    b.Property<int>("CarID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarID"));

                    b.Property<string>("CarBrand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarModel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OwnerID")
                        .HasColumnType("int");

                    b.HasKey("CarID");

                    b.HasIndex("OwnerID");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("CarWebShop.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CarWebShop.Models.Advertisement", b =>
                {
                    b.HasOne("CarWebShop.Models.Car", "Car")
                        .WithOne("Advertisement")
                        .HasForeignKey("CarWebShop.Models.Advertisement", "AdverID")
                        .IsRequired();

                    b.HasOne("CarWebShop.Models.User", "User")
                        .WithMany("Advertisements")
                        .HasForeignKey("UserID")
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CarWebShop.Models.Car", b =>
                {
                    b.HasOne("CarWebShop.Models.User", "Owner")
                        .WithMany("Cars")
                        .HasForeignKey("OwnerID")
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("CarWebShop.Models.Car", b =>
                {
                    b.Navigation("Advertisement")
                        .IsRequired();
                });

            modelBuilder.Entity("CarWebShop.Models.User", b =>
                {
                    b.Navigation("Advertisements");

                    b.Navigation("Cars");
                });
#pragma warning restore 612, 618
        }
    }
}
